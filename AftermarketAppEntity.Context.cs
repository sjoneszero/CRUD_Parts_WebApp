//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aftermarket_WebApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Aftermarket_Entity : DbContext
    {
        public Aftermarket_Entity()
            : base("name=Aftermarket_Entity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PartsManufacturer> PartsManufacturers { get; set; }
        public virtual DbSet<PartsMaster> PartsMasters { get; set; }
        public virtual DbSet<PartsType> PartsTypes { get; set; }
        public virtual DbSet<PartsVehicleMaster> PartsVehicleMasters { get; set; }
        public virtual DbSet<PartsVehicleXReference> PartsVehicleXReferences { get; set; }
    
        public virtual ObjectResult<GetListOfMakes_Result> GetListOfMakes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListOfMakes_Result>("GetListOfMakes");
        }
    
        public virtual ObjectResult<GetListOfModelNames_Result> GetListOfModelNames(Nullable<int> makeId)
        {
            var makeIdParameter = makeId.HasValue ?
                new ObjectParameter("MakeId", makeId) :
                new ObjectParameter("MakeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListOfModelNames_Result>("GetListOfModelNames", makeIdParameter);
        }
    
        public virtual ObjectResult<GetListOfSubModels_Result> GetListOfSubModels(Nullable<int> modelNameId, Nullable<int> partsMasterId, Nullable<int> year)
        {
            var modelNameIdParameter = modelNameId.HasValue ?
                new ObjectParameter("ModelNameId", modelNameId) :
                new ObjectParameter("ModelNameId", typeof(int));
    
            var partsMasterIdParameter = partsMasterId.HasValue ?
                new ObjectParameter("PartsMasterId", partsMasterId) :
                new ObjectParameter("PartsMasterId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListOfSubModels_Result>("GetListOfSubModels", modelNameIdParameter, partsMasterIdParameter, yearParameter);
        }
    
        public virtual int UpdateXRef(Nullable<int> modelId, Nullable<int> partsMasterId, Nullable<bool> assigned)
        {
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("ModelId", modelId) :
                new ObjectParameter("ModelId", typeof(int));
    
            var partsMasterIdParameter = partsMasterId.HasValue ?
                new ObjectParameter("PartsMasterId", partsMasterId) :
                new ObjectParameter("PartsMasterId", typeof(int));
    
            var assignedParameter = assigned.HasValue ?
                new ObjectParameter("Assigned", assigned) :
                new ObjectParameter("Assigned", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateXRef", modelIdParameter, partsMasterIdParameter, assignedParameter);
        }
    }
}
